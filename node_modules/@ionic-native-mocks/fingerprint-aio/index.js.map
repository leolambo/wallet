{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/fingerprint-aio/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAgB/D;IAAwC,sCAAc;IAAtD;;IAoBA,CAAC;IAnBG;;;OAGG;IACH,wCAAW,GAAX;QACI,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACF;;;;OAIG;IACH,iCAAI,GAAJ,UAAK,OAA2B;QAC5B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IACN,yBAAC;AAAD,CApBA,AAoBC,CApBuC,cAAc,GAoBrD","file":"index.js","sourceRoot":"","sourcesContent":["import { FingerprintAIO } from '@ionic-native/fingerprint-aio';\nexport interface FingerprintOptions {\n    /**\n     * Key for platform keychain\n     */\n    clientId: string;\n    /**\n     * Secret password. Only for android\n     */\n    clientSecret?: string;\n    /**\n     * Disable 'use backup' option. Only for android (optional)\n     */\n    disableBackup?: boolean;\n}\n\nexport class FingerprintAIOMock extends FingerprintAIO {\n    /**\n     * Check if fingerprint authentication is available\n     * @return {Promise<any>} Returns a promise with result\n     */\n    isAvailable(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n    /**\n     * Show authentication dialogue\n     * @param options {FingerprintOptions} options for platform specific fingerprint API\n     * @return {Promise<any>} Returns a promise that resolves when authentication was successfull\n     */\n    show(options: FingerprintOptions): Promise<any> {\n        return new Promise((resolve, reject) => {\n            resolve();\n        });\n    };\n}\n"]}